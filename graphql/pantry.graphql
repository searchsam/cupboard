"""
Pantry Model
"""
type Pantry @model {
    id: ID!
    " Order existence "
    existence: Int!
    createdAt: DateTime! @rename(attribute: "created_at")
    updatedAt: DateTime! @rename(attribute: "updated_at")
    " Request relation "
    request: Request! @belongsTo
}

extend type Query @middleware(checks: ["auth:api"]) {
    " All products on Pantry (Order by clause) "
    products(orderBy: [OrderByClause!] @orderBy): [Pantry!]! @all
}

extend type Mutation @middleware(checks: ["auth:api"]) {
    " Drecrece existence on Patry "
    decrease(
        id: ID!
            @globalId(decode: "ID")
            @eq
            @rules(apply: ["required"])
    ): Pantry
        @can(ability: "update", find: "id")
        @field(resolver: "PantryMutator@decrease")
}

extend type Subscription {
    " Update Pantry model "
    productUpdated: Pantry
}
